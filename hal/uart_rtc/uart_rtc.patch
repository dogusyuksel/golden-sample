diff --git a/hal/base_example/src/main.c b/hal/base_example/src/main.c
index d0e5655..277a8b4 100644
--- a/hal/base_example/src/main.c
+++ b/hal/base_example/src/main.c
@@ -1,4 +1,6 @@
 #include "main.h"
+#include <stdio.h>
+#include <stdlib.h>
 
 ADC_HandleTypeDef hadc1;
 ADC_HandleTypeDef hadc2;
@@ -10,6 +12,10 @@ RTC_HandleTypeDef hrtc;
 
 PCD_HandleTypeDef hpcd_USB_OTG_FS;
 
+#define CURRENT_YEAR 2024
+
+char ch = 0;
+
 void SystemClock_Config(void);
 void PeriphCommonClock_Config(void);
 static void MX_GPIO_Init(void);
@@ -20,7 +26,25 @@ static void MX_LPUART1_UART_Init(void);
 static void MX_USB_OTG_FS_PCD_Init(void);
 static void MX_RTC_Init(void);
 
+void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
+    if (huart == &hlpuart1) {
+        HAL_UART_Receive_IT(&hlpuart1, (uint8_t *)&ch, 1);
+        HAL_UART_Transmit(&hlpuart1, (uint8_t *)(&ch), 1, 10);
+    }
+}
+
+static unsigned int formatter(unsigned int number) {
+    char buffer[5] = {0};
+    char *rest = NULL;
+
+    snprintf(buffer, sizeof(buffer), "%x", number);
+
+    return strtoul(buffer, &rest, 10);
+}
+
 int main(void) {
+    RTC_TimeTypeDef sTime = {0};
+    RTC_DateTypeDef sDate = {0};
 
     HAL_Init();
 
@@ -36,7 +60,56 @@ int main(void) {
     MX_USB_OTG_FS_PCD_Init();
     MX_RTC_Init();
 
+    sTime.Hours = 0x10;
+    sTime.Minutes = 0x11;
+    sTime.Seconds = 0x12;
+    sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
+    sTime.StoreOperation = RTC_STOREOPERATION_RESET;
+    if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK) {
+        Error_Handler();
+    }
+    sDate.WeekDay = RTC_WEEKDAY_TUESDAY;
+    sDate.Month = RTC_MONTH_APRIL;
+    sDate.Date = 0x30;
+    sDate.Year = 0;
+
+    if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK) {
+        Error_Handler();
+    }
+
+    HAL_UART_Receive_IT(&hlpuart1, (uint8_t *)&ch, 1);
+
     while (1) {
+        RTC_DateTypeDef sdatestructget;
+        RTC_TimeTypeDef stimestructget;
+        uint8_t second = 0;
+        uint8_t minute = 0;
+        uint8_t hour = 0;
+        uint8_t day = 0;
+        uint8_t month = 0;
+        uint8_t year = 0;
+
+        HAL_RTC_GetTime(&hrtc, &stimestructget, RTC_FORMAT_BCD);
+        HAL_RTC_GetDate(&hrtc, &sdatestructget, RTC_FORMAT_BCD);
+
+        second = stimestructget.Seconds;
+        second = formatter(second);
+        minute = stimestructget.Minutes;
+        minute = formatter(minute);
+        hour = stimestructget.Hours;
+        hour = formatter(hour);
+
+        day = sdatestructget.Date;
+        day = formatter(day);
+        month = sdatestructget.Month;
+        month = formatter(month);
+        year = sdatestructget.Year + CURRENT_YEAR;
+
+        char data[256] = {0};
+        snprintf(data, sizeof(data), "%.02d-%.02d-%.04d %.02d:%.02d:%.02d\n", day, month, year, hour, minute, second);
+        HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, sizeof(data), 100);
+
+        HAL_Delay(1000);
     }
 }
 

